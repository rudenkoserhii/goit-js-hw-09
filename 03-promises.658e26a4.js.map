{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAeA,MAAMC,EAAO,CACTC,MAAOC,SAASC,cAAc,kBAC9BC,KAAMF,SAASC,cAAc,iBAC7BE,OAAQH,SAASC,cAAc,mBAC/BG,KAAMJ,SAASC,cAAc,SAC7BI,IAAKL,SAASC,cAAc,QAsBhCH,EAAKM,KAAKE,iBAAiB,UAnB3B,SAAsBC,GAClBA,EAAMC,iBAEN,IAAIC,EAAe,GAEnB,IAAK,IAAIC,EAAI,EAAGA,GAAKZ,EAAKK,OAAOQ,MAAOD,IAAK,CACzC,MAAME,EAAgB,CAAEC,SAAUH,EAAGX,MAAOe,OAAOhB,EAAKC,MAAMY,OAASG,OAAOhB,EAAKI,KAAKS,MAAQD,IAChGD,EAAaM,KAAKH,E,CAGtB,MAAMI,EAAWP,EAAaQ,KAAI,EAACJ,SAAEA,EAAQd,MAAEA,OA/BnD,SAAuBc,EAAUd,GAClB,IAAImB,SAAQ,CAACC,EAASC,KAC7B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACHH,EACAF,EAAQ,C,SAAEN,E,MAAUd,IAEpBqB,EAAO,C,SAAEP,E,MAAUd,GAAQ,GAEhCA,EAAM,G,CAsBgD0B,CAAcZ,EAAUd,EAAM,IAE3FmB,QAAQQ,IAAIV,GACXW,MAAK,EAACd,SAAEA,EAAQd,MAAEA,MAAa6B,EAAAhC,GAASiC,OAAOC,QAAQ,uBAAqBjB,QAAiBd,OAAW,IACtGgC,OAAI,EAAClB,SAAEA,EAAQd,MAAEA,MAAa6B,EAAAhC,GAASiC,OAAOG,QAAQ,sBAAoBnB,QAAed,OAAW,IAEvGD,EAAKM,KAAK6B,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n        return new Promise((resolve, reject) => {\n        const shouldResolve = Math.random() > 0.3;\n        setTimeout(() => {\n            if (shouldResolve) {\n                resolve({ position, delay })\n            } else {\n                reject({ position, delay })\n            }\n        }, delay);\n    });\n};\n\nconst refs = {\n    delay: document.querySelector('[name=\"delay\"]'),\n    step: document.querySelector('[name=\"step\"]'),\n    amount: document.querySelector('[name=\"amount\"]'),\n    form: document.querySelector('.form'),\n    btn: document.querySelector('btn'),\n};\n\nfunction onSubmitForm(event) {\n    event.preventDefault();\n        \n    let promisesMass = [];\n    \n    for (let i = 1; i <= refs.amount.value; i++) {\n        const promiseObject = { position: i, delay: Number(refs.delay.value) + Number(refs.step.value * i) };\n        promisesMass.push(promiseObject);\n    };\n    \n    const promises = promisesMass.map(({ position, delay }) => { createPromise(position, delay) });\n    \n    Promise.all(promises)\n    .then(({ position, delay }) => {Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay} ms`);})\n    .catch(({ position, delay }) => {Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay} ms`);});\n\n    refs.form.reset();\n};\n\nrefs.form.addEventListener('submit', onSubmitForm);\n\n\n\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$refs","delay","document","querySelector","step","amount","form","btn","addEventListener","event","preventDefault","promisesMass","i","value","promiseObject","position","Number","push","promises","map","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$47d4ff9957288465$var$createPromise","all","then","$parcel$interopDefault","Notify","success","catch","failure","reset"],"version":3,"file":"03-promises.658e26a4.js.map"}